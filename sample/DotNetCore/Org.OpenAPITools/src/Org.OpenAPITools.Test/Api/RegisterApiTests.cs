/*
 * kabuステーションAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing RegisterApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RegisterApiTests : IDisposable
    {
        private RegisterApi instance;

        public RegisterApiTests()
        {
            instance = new RegisterApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RegisterApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RegisterApi
            //Assert.IsType<RegisterApi>(instance);
        }

        /// <summary>
        /// Test RegisterPut
        /// </summary>
        [Fact]
        public void RegisterPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string X_API_KEY = null;
            //RequestRegister req = null;
            //var response = instance.RegisterPut(X_API_KEY, req);
            //Assert.IsType<RegistSuccess>(response);
        }

        /// <summary>
        /// Test UnregisterAllPut
        /// </summary>
        [Fact]
        public void UnregisterAllPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string X_API_KEY = null;
            //var response = instance.UnregisterAllPut(X_API_KEY);
            //Assert.IsType<UnregisterAllSuccess>(response);
        }

        /// <summary>
        /// Test UnregisterPut
        /// </summary>
        [Fact]
        public void UnregisterPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string X_API_KEY = null;
            //RequestRegister req = null;
            //var response = instance.UnregisterPut(X_API_KEY, req);
            //Assert.IsType<RegistSuccess>(response);
        }
    }
}
