/*
 * kabuステーションAPI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.5
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// WalletFutureSuccess
    /// </summary>
    [DataContract(Name = "WalletFutureSuccess")]
    public partial class WalletFutureSuccess : IEquatable<WalletFutureSuccess>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WalletFutureSuccess" /> class.
        /// </summary>
        /// <param name="futureTradeLimit">新規建玉可能額.</param>
        /// <param name="marginRequirement">必要証拠金額&lt;br&gt;※銘柄指定の場合のみ。&lt;br&gt;※銘柄が指定されなかった場合、空を返す。.</param>
        public WalletFutureSuccess(double futureTradeLimit = default(double), double marginRequirement = default(double))
        {
            this.FutureTradeLimit = futureTradeLimit;
            this.MarginRequirement = marginRequirement;
        }

        /// <summary>
        /// 新規建玉可能額
        /// </summary>
        /// <value>新規建玉可能額</value>
        [DataMember(Name = "FutureTradeLimit", EmitDefaultValue = true)]
        public double FutureTradeLimit { get; set; }

        /// <summary>
        /// 必要証拠金額&lt;br&gt;※銘柄指定の場合のみ。&lt;br&gt;※銘柄が指定されなかった場合、空を返す。
        /// </summary>
        /// <value>必要証拠金額&lt;br&gt;※銘柄指定の場合のみ。&lt;br&gt;※銘柄が指定されなかった場合、空を返す。</value>
        [DataMember(Name = "MarginRequirement", EmitDefaultValue = true)]
        public double MarginRequirement { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WalletFutureSuccess {\n");
            sb.Append("  FutureTradeLimit: ").Append(FutureTradeLimit).Append("\n");
            sb.Append("  MarginRequirement: ").Append(MarginRequirement).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WalletFutureSuccess);
        }

        /// <summary>
        /// Returns true if WalletFutureSuccess instances are equal
        /// </summary>
        /// <param name="input">Instance of WalletFutureSuccess to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WalletFutureSuccess input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FutureTradeLimit == input.FutureTradeLimit ||
                    this.FutureTradeLimit.Equals(input.FutureTradeLimit)
                ) && 
                (
                    this.MarginRequirement == input.MarginRequirement ||
                    this.MarginRequirement.Equals(input.MarginRequirement)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.FutureTradeLimit.GetHashCode();
                hashCode = hashCode * 59 + this.MarginRequirement.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
