/*
 * kabuステーションAPI
 *
 * # 定義情報   REST APIのコード一覧、エンドポイントは下記リンク参照     - [REST APIコード一覧](../ptal/error.html)
 *
 * The version of the OpenAPI document: 1.5
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// OrderSuccess
    /// </summary>
    [DataContract(Name = "OrderSuccess")]
    public partial class OrderSuccess : IEquatable<OrderSuccess>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderSuccess" /> class.
        /// </summary>
        /// <param name="result">結果コード&lt;br&gt;0が成功。それ以外はエラーコード。.</param>
        /// <param name="orderId">受付注文番号.</param>
        public OrderSuccess(int result = default(int), string orderId = default(string))
        {
            this.Result = result;
            this.OrderId = orderId;
        }

        /// <summary>
        /// 結果コード&lt;br&gt;0が成功。それ以外はエラーコード。
        /// </summary>
        /// <value>結果コード&lt;br&gt;0が成功。それ以外はエラーコード。</value>
        [DataMember(Name = "Result", EmitDefaultValue = true)]
        public int Result { get; set; }

        /// <summary>
        /// 受付注文番号
        /// </summary>
        /// <value>受付注文番号</value>
        [DataMember(Name = "OrderId", EmitDefaultValue = true)]
        public string OrderId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrderSuccess {\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderSuccess);
        }

        /// <summary>
        /// Returns true if OrderSuccess instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderSuccess to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderSuccess input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Result == input.Result ||
                    this.Result.Equals(input.Result)
                ) && 
                (
                    this.OrderId == input.OrderId ||
                    (this.OrderId != null &&
                    this.OrderId.Equals(input.OrderId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Result.GetHashCode();
                if (this.OrderId != null)
                    hashCode = hashCode * 59 + this.OrderId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
