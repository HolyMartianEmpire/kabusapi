/*
 * kabuステーションAPI
 *
 * # 定義情報   REST APIのコード一覧、エンドポイントは下記リンク参照     - [REST APIコード一覧](../ptal/error.html)
 *
 * The version of the OpenAPI document: 1.5
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// RegulationsResponseRegulationsInfo
    /// </summary>
    [DataContract(Name = "RegulationsResponse_RegulationsInfo")]
    public partial class RegulationsResponseRegulationsInfo : IEquatable<RegulationsResponseRegulationsInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RegulationsResponseRegulationsInfo" /> class.
        /// </summary>
        /// <param name="exchange">規制市場 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;東証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;3&lt;/td&gt;       &lt;td&gt;名証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;5&lt;/td&gt;       &lt;td&gt;福証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;6&lt;/td&gt;       &lt;td&gt;札証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;9&lt;/td&gt;       &lt;td&gt;SOR&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;10&lt;/td&gt;       &lt;td&gt;CXJ&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;21&lt;/td&gt;       &lt;td&gt;JNX&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;.</param>
        /// <param name="product">規制取引区分&lt;br&gt; ※空売り規制の場合、「4：新規」 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;現物&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;信用新規（制度）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;3&lt;/td&gt;       &lt;td&gt;信用新規（一般）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;4&lt;/td&gt;       &lt;td&gt;新規&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;5&lt;/td&gt;       &lt;td&gt;信用返済（制度）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;6&lt;/td&gt;       &lt;td&gt;信用返済（一般）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;7&lt;/td&gt;       &lt;td&gt;返済&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;8&lt;/td&gt;       &lt;td&gt;品受&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;9&lt;/td&gt;       &lt;td&gt;品渡&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;.</param>
        /// <param name="side">規制売買&lt;br&gt; ※空売り規制の場合、「1：売」 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;売&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;買&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;.</param>
        /// <param name="reason">理由&lt;br&gt;※空売り規制の場合、「空売り規制」.</param>
        /// <param name="limitStartDay">制限開始日&lt;br&gt;yyyy/MM/dd HH:mm形式  &lt;br&gt;※空売り規制の場合、null.</param>
        /// <param name="limitEndDay">制限終了日&lt;br&gt;yyyy/MM/dd HH:mm形式  &lt;br&gt;※空売り規制の場合、null.</param>
        /// <param name="level">コンプライアンスレベル&lt;br&gt; ※空売り規制の場合、null &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;０&lt;/td&gt;       &lt;td&gt;規制無し&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;１&lt;/td&gt;       &lt;td&gt;ワーニング&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;２&lt;/td&gt;       &lt;td&gt;エラー&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;.</param>
        public RegulationsResponseRegulationsInfo(int exchange = default(int), int product = default(int), string side = default(string), string reason = default(string), string limitStartDay = default(string), string limitEndDay = default(string), int level = default(int))
        {
            this.Exchange = exchange;
            this.Product = product;
            this.Side = side;
            this.Reason = reason;
            this.LimitStartDay = limitStartDay;
            this.LimitEndDay = limitEndDay;
            this.Level = level;
        }

        /// <summary>
        /// 規制市場 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;東証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;3&lt;/td&gt;       &lt;td&gt;名証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;5&lt;/td&gt;       &lt;td&gt;福証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;6&lt;/td&gt;       &lt;td&gt;札証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;9&lt;/td&gt;       &lt;td&gt;SOR&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;10&lt;/td&gt;       &lt;td&gt;CXJ&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;21&lt;/td&gt;       &lt;td&gt;JNX&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;
        /// </summary>
        /// <value>規制市場 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;東証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;3&lt;/td&gt;       &lt;td&gt;名証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;5&lt;/td&gt;       &lt;td&gt;福証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;6&lt;/td&gt;       &lt;td&gt;札証&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;9&lt;/td&gt;       &lt;td&gt;SOR&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;10&lt;/td&gt;       &lt;td&gt;CXJ&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;21&lt;/td&gt;       &lt;td&gt;JNX&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;</value>
        [DataMember(Name = "Exchange", EmitDefaultValue = true)]
        public int Exchange { get; set; }

        /// <summary>
        /// 規制取引区分&lt;br&gt; ※空売り規制の場合、「4：新規」 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;現物&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;信用新規（制度）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;3&lt;/td&gt;       &lt;td&gt;信用新規（一般）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;4&lt;/td&gt;       &lt;td&gt;新規&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;5&lt;/td&gt;       &lt;td&gt;信用返済（制度）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;6&lt;/td&gt;       &lt;td&gt;信用返済（一般）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;7&lt;/td&gt;       &lt;td&gt;返済&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;8&lt;/td&gt;       &lt;td&gt;品受&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;9&lt;/td&gt;       &lt;td&gt;品渡&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;
        /// </summary>
        /// <value>規制取引区分&lt;br&gt; ※空売り規制の場合、「4：新規」 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;現物&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;信用新規（制度）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;3&lt;/td&gt;       &lt;td&gt;信用新規（一般）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;4&lt;/td&gt;       &lt;td&gt;新規&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;5&lt;/td&gt;       &lt;td&gt;信用返済（制度）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;6&lt;/td&gt;       &lt;td&gt;信用返済（一般）&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;7&lt;/td&gt;       &lt;td&gt;返済&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;8&lt;/td&gt;       &lt;td&gt;品受&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;9&lt;/td&gt;       &lt;td&gt;品渡&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;</value>
        [DataMember(Name = "Product", EmitDefaultValue = true)]
        public int Product { get; set; }

        /// <summary>
        /// 規制売買&lt;br&gt; ※空売り規制の場合、「1：売」 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;売&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;買&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;
        /// </summary>
        /// <value>規制売買&lt;br&gt; ※空売り規制の場合、「1：売」 &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;0&lt;/td&gt;       &lt;td&gt;全対象&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;1&lt;/td&gt;       &lt;td&gt;売&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;2&lt;/td&gt;       &lt;td&gt;買&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;</value>
        [DataMember(Name = "Side", EmitDefaultValue = true)]
        public string Side { get; set; }

        /// <summary>
        /// 理由&lt;br&gt;※空売り規制の場合、「空売り規制」
        /// </summary>
        /// <value>理由&lt;br&gt;※空売り規制の場合、「空売り規制」</value>
        [DataMember(Name = "Reason", EmitDefaultValue = true)]
        public string Reason { get; set; }

        /// <summary>
        /// 制限開始日&lt;br&gt;yyyy/MM/dd HH:mm形式  &lt;br&gt;※空売り規制の場合、null
        /// </summary>
        /// <value>制限開始日&lt;br&gt;yyyy/MM/dd HH:mm形式  &lt;br&gt;※空売り規制の場合、null</value>
        [DataMember(Name = "LimitStartDay", EmitDefaultValue = true)]
        public string LimitStartDay { get; set; }

        /// <summary>
        /// 制限終了日&lt;br&gt;yyyy/MM/dd HH:mm形式  &lt;br&gt;※空売り規制の場合、null
        /// </summary>
        /// <value>制限終了日&lt;br&gt;yyyy/MM/dd HH:mm形式  &lt;br&gt;※空売り規制の場合、null</value>
        [DataMember(Name = "LimitEndDay", EmitDefaultValue = true)]
        public string LimitEndDay { get; set; }

        /// <summary>
        /// コンプライアンスレベル&lt;br&gt; ※空売り規制の場合、null &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;０&lt;/td&gt;       &lt;td&gt;規制無し&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;１&lt;/td&gt;       &lt;td&gt;ワーニング&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;２&lt;/td&gt;       &lt;td&gt;エラー&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;
        /// </summary>
        /// <value>コンプライアンスレベル&lt;br&gt; ※空売り規制の場合、null &lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;th&gt;定義値&lt;/th&gt;       &lt;th&gt;内容&lt;/th&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;tr&gt;       &lt;td&gt;０&lt;/td&gt;       &lt;td&gt;規制無し&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;１&lt;/td&gt;       &lt;td&gt;ワーニング&lt;/td&gt;     &lt;/tr&gt;     &lt;tr&gt;       &lt;td&gt;２&lt;/td&gt;       &lt;td&gt;エラー&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt; &lt;/table&gt;</value>
        [DataMember(Name = "Level", EmitDefaultValue = true)]
        public int Level { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RegulationsResponseRegulationsInfo {\n");
            sb.Append("  Exchange: ").Append(Exchange).Append("\n");
            sb.Append("  Product: ").Append(Product).Append("\n");
            sb.Append("  Side: ").Append(Side).Append("\n");
            sb.Append("  Reason: ").Append(Reason).Append("\n");
            sb.Append("  LimitStartDay: ").Append(LimitStartDay).Append("\n");
            sb.Append("  LimitEndDay: ").Append(LimitEndDay).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RegulationsResponseRegulationsInfo);
        }

        /// <summary>
        /// Returns true if RegulationsResponseRegulationsInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of RegulationsResponseRegulationsInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RegulationsResponseRegulationsInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Exchange == input.Exchange ||
                    this.Exchange.Equals(input.Exchange)
                ) && 
                (
                    this.Product == input.Product ||
                    this.Product.Equals(input.Product)
                ) && 
                (
                    this.Side == input.Side ||
                    (this.Side != null &&
                    this.Side.Equals(input.Side))
                ) && 
                (
                    this.Reason == input.Reason ||
                    (this.Reason != null &&
                    this.Reason.Equals(input.Reason))
                ) && 
                (
                    this.LimitStartDay == input.LimitStartDay ||
                    (this.LimitStartDay != null &&
                    this.LimitStartDay.Equals(input.LimitStartDay))
                ) && 
                (
                    this.LimitEndDay == input.LimitEndDay ||
                    (this.LimitEndDay != null &&
                    this.LimitEndDay.Equals(input.LimitEndDay))
                ) && 
                (
                    this.Level == input.Level ||
                    this.Level.Equals(input.Level)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.Exchange.GetHashCode();
                hashCode = hashCode * 59 + this.Product.GetHashCode();
                if (this.Side != null)
                    hashCode = hashCode * 59 + this.Side.GetHashCode();
                if (this.Reason != null)
                    hashCode = hashCode * 59 + this.Reason.GetHashCode();
                if (this.LimitStartDay != null)
                    hashCode = hashCode * 59 + this.LimitStartDay.GetHashCode();
                if (this.LimitEndDay != null)
                    hashCode = hashCode * 59 + this.LimitEndDay.GetHashCode();
                hashCode = hashCode * 59 + this.Level.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
