/*
 * kabuステーションAPI
 *
 * # 定義情報   REST APIのコード一覧、エンドポイントは下記リンク参照     - [REST APIコード一覧](../ptal/error.html)
 *
 * The version of the OpenAPI document: 1.5
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// RankingByMarginResponseRanking
    /// </summary>
    [DataContract(Name = "RankingByMarginResponse_Ranking")]
    public partial class RankingByMarginResponseRanking : IEquatable<RankingByMarginResponseRanking>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RankingByMarginResponseRanking" /> class.
        /// </summary>
        /// <param name="no">順位&lt;br&gt;※ランキング内で同じ順位が返却される場合があります（10位が2件など）.</param>
        /// <param name="symbol">銘柄コード.</param>
        /// <param name="symbolName">銘柄名称.</param>
        /// <param name="sellRapidPaymentPercentage">売残（千株）.</param>
        /// <param name="sellLastWeekRatio">売残前週比.</param>
        /// <param name="buyRapidPaymentPercentage">買残（千株）.</param>
        /// <param name="buyLastWeekRatio">買残前週比.</param>
        /// <param name="ratio">倍率.</param>
        /// <param name="exchangeName">市場名.</param>
        /// <param name="categoryName">業種名.</param>
        public RankingByMarginResponseRanking(int no = default(int), string symbol = default(string), string symbolName = default(string), double sellRapidPaymentPercentage = default(double), double sellLastWeekRatio = default(double), double buyRapidPaymentPercentage = default(double), double buyLastWeekRatio = default(double), double ratio = default(double), string exchangeName = default(string), string categoryName = default(string))
        {
            this.No = no;
            this.Symbol = symbol;
            this.SymbolName = symbolName;
            this.SellRapidPaymentPercentage = sellRapidPaymentPercentage;
            this.SellLastWeekRatio = sellLastWeekRatio;
            this.BuyRapidPaymentPercentage = buyRapidPaymentPercentage;
            this.BuyLastWeekRatio = buyLastWeekRatio;
            this.Ratio = ratio;
            this.ExchangeName = exchangeName;
            this.CategoryName = categoryName;
        }

        /// <summary>
        /// 順位&lt;br&gt;※ランキング内で同じ順位が返却される場合があります（10位が2件など）
        /// </summary>
        /// <value>順位&lt;br&gt;※ランキング内で同じ順位が返却される場合があります（10位が2件など）</value>
        [DataMember(Name = "No", EmitDefaultValue = true)]
        public int No { get; set; }

        /// <summary>
        /// 銘柄コード
        /// </summary>
        /// <value>銘柄コード</value>
        [DataMember(Name = "Symbol", EmitDefaultValue = true)]
        public string Symbol { get; set; }

        /// <summary>
        /// 銘柄名称
        /// </summary>
        /// <value>銘柄名称</value>
        [DataMember(Name = "SymbolName", EmitDefaultValue = true)]
        public string SymbolName { get; set; }

        /// <summary>
        /// 売残（千株）
        /// </summary>
        /// <value>売残（千株）</value>
        [DataMember(Name = "SellRapidPaymentPercentage", EmitDefaultValue = true)]
        public double SellRapidPaymentPercentage { get; set; }

        /// <summary>
        /// 売残前週比
        /// </summary>
        /// <value>売残前週比</value>
        [DataMember(Name = "SellLastWeekRatio", EmitDefaultValue = true)]
        public double SellLastWeekRatio { get; set; }

        /// <summary>
        /// 買残（千株）
        /// </summary>
        /// <value>買残（千株）</value>
        [DataMember(Name = "BuyRapidPaymentPercentage", EmitDefaultValue = true)]
        public double BuyRapidPaymentPercentage { get; set; }

        /// <summary>
        /// 買残前週比
        /// </summary>
        /// <value>買残前週比</value>
        [DataMember(Name = "BuyLastWeekRatio", EmitDefaultValue = true)]
        public double BuyLastWeekRatio { get; set; }

        /// <summary>
        /// 倍率
        /// </summary>
        /// <value>倍率</value>
        [DataMember(Name = "Ratio", EmitDefaultValue = true)]
        public double Ratio { get; set; }

        /// <summary>
        /// 市場名
        /// </summary>
        /// <value>市場名</value>
        [DataMember(Name = "ExchangeName", EmitDefaultValue = true)]
        public string ExchangeName { get; set; }

        /// <summary>
        /// 業種名
        /// </summary>
        /// <value>業種名</value>
        [DataMember(Name = "CategoryName", EmitDefaultValue = true)]
        public string CategoryName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RankingByMarginResponseRanking {\n");
            sb.Append("  No: ").Append(No).Append("\n");
            sb.Append("  Symbol: ").Append(Symbol).Append("\n");
            sb.Append("  SymbolName: ").Append(SymbolName).Append("\n");
            sb.Append("  SellRapidPaymentPercentage: ").Append(SellRapidPaymentPercentage).Append("\n");
            sb.Append("  SellLastWeekRatio: ").Append(SellLastWeekRatio).Append("\n");
            sb.Append("  BuyRapidPaymentPercentage: ").Append(BuyRapidPaymentPercentage).Append("\n");
            sb.Append("  BuyLastWeekRatio: ").Append(BuyLastWeekRatio).Append("\n");
            sb.Append("  Ratio: ").Append(Ratio).Append("\n");
            sb.Append("  ExchangeName: ").Append(ExchangeName).Append("\n");
            sb.Append("  CategoryName: ").Append(CategoryName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RankingByMarginResponseRanking);
        }

        /// <summary>
        /// Returns true if RankingByMarginResponseRanking instances are equal
        /// </summary>
        /// <param name="input">Instance of RankingByMarginResponseRanking to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RankingByMarginResponseRanking input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.No == input.No ||
                    this.No.Equals(input.No)
                ) && 
                (
                    this.Symbol == input.Symbol ||
                    (this.Symbol != null &&
                    this.Symbol.Equals(input.Symbol))
                ) && 
                (
                    this.SymbolName == input.SymbolName ||
                    (this.SymbolName != null &&
                    this.SymbolName.Equals(input.SymbolName))
                ) && 
                (
                    this.SellRapidPaymentPercentage == input.SellRapidPaymentPercentage ||
                    this.SellRapidPaymentPercentage.Equals(input.SellRapidPaymentPercentage)
                ) && 
                (
                    this.SellLastWeekRatio == input.SellLastWeekRatio ||
                    this.SellLastWeekRatio.Equals(input.SellLastWeekRatio)
                ) && 
                (
                    this.BuyRapidPaymentPercentage == input.BuyRapidPaymentPercentage ||
                    this.BuyRapidPaymentPercentage.Equals(input.BuyRapidPaymentPercentage)
                ) && 
                (
                    this.BuyLastWeekRatio == input.BuyLastWeekRatio ||
                    this.BuyLastWeekRatio.Equals(input.BuyLastWeekRatio)
                ) && 
                (
                    this.Ratio == input.Ratio ||
                    this.Ratio.Equals(input.Ratio)
                ) && 
                (
                    this.ExchangeName == input.ExchangeName ||
                    (this.ExchangeName != null &&
                    this.ExchangeName.Equals(input.ExchangeName))
                ) && 
                (
                    this.CategoryName == input.CategoryName ||
                    (this.CategoryName != null &&
                    this.CategoryName.Equals(input.CategoryName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.No.GetHashCode();
                if (this.Symbol != null)
                    hashCode = hashCode * 59 + this.Symbol.GetHashCode();
                if (this.SymbolName != null)
                    hashCode = hashCode * 59 + this.SymbolName.GetHashCode();
                hashCode = hashCode * 59 + this.SellRapidPaymentPercentage.GetHashCode();
                hashCode = hashCode * 59 + this.SellLastWeekRatio.GetHashCode();
                hashCode = hashCode * 59 + this.BuyRapidPaymentPercentage.GetHashCode();
                hashCode = hashCode * 59 + this.BuyLastWeekRatio.GetHashCode();
                hashCode = hashCode * 59 + this.Ratio.GetHashCode();
                if (this.ExchangeName != null)
                    hashCode = hashCode * 59 + this.ExchangeName.GetHashCode();
                if (this.CategoryName != null)
                    hashCode = hashCode * 59 + this.CategoryName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
